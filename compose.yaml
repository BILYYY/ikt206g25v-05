version: "3.8"

services:
  app:
    build: .
    container_name: dotnet_app
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=db;Database=exampledb;Username=exampleuser;Password=examplepass
    networks:
      - backend
    expose:
      - "8080"
    entrypoint: ["/bin/sh", "-c", "sleep 10 && dotnet Example.dll"]

  db:
    image: postgres:16
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: exampledb
      POSTGRES_USER: exampleuser
      POSTGRES_PASSWORD: examplepass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U exampleuser -d exampledb"]
      interval: 10s
      retries: 5
      start_period: 30s

  caddy:
    image: caddy:latest
    container_name: caddy_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
